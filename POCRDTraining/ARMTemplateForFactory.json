{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "POCRDTraining"
		},
		"ADLS_POC_RD_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLS_POC_RD'"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureFunction1_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'AzureFunction1'"
		},
		"AzurePostgreSql1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzurePostgreSql1'"
		},
		"AzurePostgreSql2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzurePostgreSql2'"
		},
		"AzurePostgreSql3_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzurePostgreSql3'"
		},
		"AzurePostgreSql3_SHIR_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzurePostgreSql3_SHIR'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"AzureSqlDatabase2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase2'"
		},
		"PostgreSql1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'PostgreSql1'"
		},
		"SQL_Cloud_Connect_Rev_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQL_Cloud_Connect_Rev'"
		},
		"SQL_OnPrem_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQL_OnPrem'"
		},
		"SqlServer1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer1'"
		},
		"SqlServerOnPrem_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServerOnPrem'"
		},
		"ADLS_POC_RD_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://rdpoctraining.dfs.core.windows.net/"
		},
		"AzureFunction1_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://rdtestingpoctraining.azurewebsites.net"
		},
		"AzureKeyVaultBlobStorage_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "ADF-Testing"
		},
		"KeyVaultSQLParijat_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "ADF-SQLTesting"
		},
		"SQL_OnCloud_Connection_Key_Vault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://POCVaultTraining.vault.azure.net/"
		},
		"Custom events Trigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/9b5fcc15-c260-4ff3-a5f3-0af393d83fa8/resourceGroups/RD_POC/providers/Microsoft.EventGrid/topics/EventGridADF"
		},
		"Storage_Event_Trigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/9b5fcc15-c260-4ff3-a5f3-0af393d83fa8/resourceGroups/RD_POC/providers/Microsoft.Storage/storageAccounts/rdpoctraining"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ADL-Connect')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "timestamp",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "timestamp",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "User Security ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "User Security ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Role ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Role ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Company Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Company Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Scope",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Scope",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "App ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "App ID",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ParijatLiveData",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "timestamp",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "timestamp"
										}
									},
									{
										"source": {
											"name": "User Security ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "User Security ID"
										}
									},
									{
										"source": {
											"name": "Role ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Role ID"
										}
									},
									{
										"source": {
											"name": "Company Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Company Name"
										}
									},
									{
										"source": {
											"name": "Scope",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Scope"
										}
									},
									{
										"source": {
											"name": "App ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "App ID"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzurePostgreSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-12T07:36:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ParijatLiveData')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/AzurePostgreSqlTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnCloudSQL_OnPremPG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "create table \"control access\"(\"Role ID\" \"text\" NOT NULL,\n                      \"Company Name\" \"text\" NOT NULL,\n                      \"Scope\" \"text\" NOT NULL,\n                      \"App ID\" \"text\" NOT NULL,\n                      \"timestamp\" \"text\" NOT NULL,\n                      \"User Security ID\" \"text\" NOT NULL);",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable11",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Postgres_Testing_On_Prem",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-21T13:24:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable11')]",
				"[concat(variables('factoryId'), '/datasets/Postgres_Testing_On_Prem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnCloud_Blob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Role ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Role ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Company Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Company Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Scope",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Scope",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "App ID",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "App ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "timestamp",
											"type": "Byte[]",
											"physicalType": "timestamp"
										},
										"sink": {
											"name": "timestamp",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "User Security ID",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "User Security ID",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-21T07:10:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Postgres')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "create table \"control access\"(\"Role ID\" \"text\" NOT NULL,\n                      \"Company Name\" \"text\" NOT NULL,\n                      \"Scope\" \"text\" NOT NULL,\n                      \"App ID\" \"text\" NOT NULL,\n                      \"timestamp\" \"text\" NOT NULL,\n                      \"User Security ID\" \"text\" NOT NULL);",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Role ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Role ID",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "Company Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Company Name",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "Scope",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Scope",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "App ID",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "App ID",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "timestamp",
											"type": "Byte[]",
											"physicalType": "timestamp"
										},
										"sink": {
											"name": "timestamp",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "User Security ID",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "User Security ID",
											"type": "String",
											"physicalType": "text"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_OnPrem",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "PG_ONCloud",
								"type": "DatasetReference",
								"parameters": {
									"tablename": "control access"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-21T10:46:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_OnPrem')]",
				"[concat(variables('factoryId'), '/datasets/PG_ONCloud')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLCloud_PGCloud')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "create table \"access control\"(\"Role ID\" \"text\" NOT NULL,\n                      \"Company Name\" \"text\" NOT NULL,\n                      \"Scope\" \"text\" NOT NULL,\n                      \"App ID\" \"text\" NOT NULL,\n                      \"timestamp\" \"text\" NOT NULL,\n                      \"User Security ID\" \"text\" NOT NULL);",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_ONCloud",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "PG_ONCloud",
								"type": "DatasetReference",
								"parameters": {
									"tablename": "control access"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-24T05:12:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_ONCloud')]",
				"[concat(variables('factoryId'), '/datasets/PG_ONCloud')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLCloud_SQLCloud')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Role ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Role ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Company Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Company Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Scope",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Scope",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "App ID",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "App ID",
											"type": "Guid",
											"physicalType": "Guid"
										}
									},
									{
										"source": {
											"name": "timestamp",
											"type": "Byte[]",
											"physicalType": "timestamp"
										},
										"sink": {
											"name": "timestamp",
											"type": "Byte[]",
											"physicalType": "Byte[]"
										}
									},
									{
										"source": {
											"name": "User Security ID",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "User Security ID",
											"type": "Guid",
											"physicalType": "Guid"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable11",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable21",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-21T07:10:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable11')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable21')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_ONPrem_BLOB_Email')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ParijatDB-Testing",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ParijatLiveData",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Task Sucessfull",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ParijatDB-Testing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://adf-testing.azurewebsites.net:443/api/Email_test/triggers/When_a_HTTP_request_is_received/invoke?api-version=2022-05-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=6k9F0fhYDgVw-pTxvLu9aDF4mpmottM5rgUK52FqnqY",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n    \"To\": \"mayuresh.banneteamcomputers.com\",\n    \"Subject\": \"Task failed\",\n    \"Messege\": \"Task Sucessfully failed\",\n    \"DataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"PipelineName\": \"@{pipeline().Pipeline}\",\n    \"Time\": \"@{pipeline().TriggerTime}\",\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Task Failed",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ParijatDB-Testing",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://adf-testing.azurewebsites.net:443/api/Email_test_Failed/triggers/When_a_HTTP_request_is_received/invoke?api-version=2022-05-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=uC6SnmNVinDhbPZNcidJWgpW1EDl68zPujfqZpYNRnM",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n    \"To\": \"mayuresh.banneteamcomputers.com\",\n    \"Subject\": \"Task failed\",\n    \"Messege\": \"Task failed\",\n    \"DataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"PipelineName\": \"@{pipeline().Pipeline}\",\n    \"Time\": \"@{pipeline().TriggerTime}\",\n    \"Report\": \"@{activity('ParijatDB-Testing').Error.Message}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-21T07:10:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/ParijatLiveData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_OnPrem_SQLCloud')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "create table \"control access\"(\"Role ID\" \"nvarchar\" (255) NOT NULL,\n                      \"Company Name\" \"nvarchar\" (255) NOT NULL,\n                      \"Scope\" \"int\" NOT NULL,\n                      \"App ID\" \"uniqueidentifier\" NOT NULL,\n                      \"timestamp\" \"timestamp\" NOT NULL,\n                      \"User Security ID\" \"uniqueidentifier\" NOT NULL);",
									"type": "Expression"
								},
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Role ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Role ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Company Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Company Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Scope",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Scope",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "App ID",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "App ID",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										}
									},
									{
										"source": {
											"name": "timestamp",
											"type": "Byte[]",
											"physicalType": "timestamp"
										},
										"sink": {
											"name": "timestamp",
											"type": "Byte[]",
											"physicalType": "timestamp"
										}
									},
									{
										"source": {
											"name": "User Security ID",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "User Security ID",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-21T07:10:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_OnPrem_SQL_OnPrem')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "timestamp",
											"type": "Byte[]",
											"physicalType": "timestamp"
										},
										"sink": {
											"name": "timestamp",
											"type": "Byte[]",
											"physicalType": "timestamp"
										}
									},
									{
										"source": {
											"name": "User Security ID",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "User Security ID",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										}
									},
									{
										"source": {
											"name": "Role ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Role ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Company Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Company Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Scope",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Scope",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "App ID",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "App ID",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServerOnPrem",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-21T07:10:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerOnPrem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Onprem_Onprem1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable11",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-20T11:51:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable11')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQlCloud_OnPrem_SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlServerSink",
								"preCopyScript": {
									"value": "create table \"control access\"(\"Role ID\" \"nvarchar\" (255) NOT NULL,\n                      \"Company Name\" \"nvarchar\" (255) NOT NULL,\n                      \"Scope\" \"int\" NOT NULL,\n                      \"App ID\" \"uniqueidentifier\" NOT NULL,\n                      \"timestamp\" \"timestamp\" NOT NULL,\n                      \"User Security ID\" \"uniqueidentifier\" NOT NULL);",
									"type": "Expression"
								},
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Role ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Role ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Company Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Company Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Scope",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Scope",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "App ID",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "App ID",
											"type": "Guid",
											"physicalType": "Guid"
										}
									},
									{
										"source": {
											"name": "timestamp",
											"type": "Byte[]",
											"physicalType": "timestamp"
										},
										"sink": {
											"name": "timestamp",
											"type": "Byte[]",
											"physicalType": "Byte[]"
										}
									},
									{
										"source": {
											"name": "User Security ID",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "User Security ID",
											"type": "Guid",
											"physicalType": "Guid"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQL_Cloud_Rev",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-21T07:10:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/SQL_Cloud_Rev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQlOnPrem_OnPremPG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": {
									"value": "create table \"control access\"(\"Role ID\" \"text\" NOT NULL,\n                      \"Company Name\" \"text\" NOT NULL,\n                      \"Scope\" \"text\" NOT NULL,\n                      \"App ID\" \"text\" NOT NULL,\n                      \"timestamp\" \"text\" NOT NULL,\n                      \"User Security ID\" \"text\" NOT NULL);",
									"type": "Expression"
								},
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_OnPrem",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Postgres_Testing_On_Prem",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-24T05:17:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_OnPrem')]",
				"[concat(variables('factoryId'), '/datasets/Postgres_Testing_On_Prem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Storage_Cloud_Test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable22",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "KeyVaultStorage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-03T10:02:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable22')]",
				"[concat(variables('factoryId'), '/datasets/KeyVaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pOstgresdataflow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Postgres",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"tablename": "control access"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-21T07:10:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Postgres')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pOstgresdataflow_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Postgres_copy1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"tablename": "control access"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-07-21T07:10:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Postgres_copy1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_OnPrem",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_OnPrem')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzurePostgreSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-03T12:30:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzurePostgreSqlTable3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzurePostgreSql1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "String",
						"defaultValue": "control access"
					}
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "public",
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzurePostgreSql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzurePostgreSql2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "public",
					"table": "Access_Control"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzurePostgreSql2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSqlTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzurePostgreSql3_SHIR",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "public",
					"table": "access control"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzurePostgreSql3_SHIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Role ID",
						"type": "nvarchar"
					},
					{
						"name": "Company Name",
						"type": "nvarchar"
					},
					{
						"name": "Scope",
						"type": "int",
						"precision": 10
					},
					{
						"name": "App ID",
						"type": "uniqueidentifier"
					},
					{
						"name": "timestamp",
						"type": "timestamp"
					},
					{
						"name": "User Security ID",
						"type": "uniqueidentifier"
					}
				],
				"typeProperties": {
					"schema": "",
					"table": {
						"value": "control access",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable11')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": {
						"value": "control access",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "control access"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable21')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "control access"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable22')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "KeyVaultSQLParijat",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "control access"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/KeyVaultSQLParijat')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_POC_RD",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "control access.txt",
						"fileSystem": "parijatlivedb"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_POC_RD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_POC_RD",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "csv",
						"fileSystem": "xml"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_POC_RD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/KeyVaultStorage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureKeyVaultBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "abcd.csv",
						"container": "parijatlivedb"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Role ID",
						"type": "String"
					},
					{
						"name": "Company Name",
						"type": "String"
					},
					{
						"name": "Scope",
						"type": "String"
					},
					{
						"name": "App ID",
						"type": "String"
					},
					{
						"name": "timestamp",
						"type": "String"
					},
					{
						"name": "User Security ID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVaultBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PG_ONCloud')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzurePostgreSql3_SHIR",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string",
						"defaultValue": "control access"
					}
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "public",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzurePostgreSql3_SHIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/POC_XML')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_POC_RD",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Inventory.xml",
						"fileSystem": "xml"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_POC_RD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ParijatLiveData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "abcd.csv",
						"folderPath": "test",
						"container": "parijatlivedb"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Postgres_Testing_On_Prem')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzurePostgreSql3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"table": "control access"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzurePostgreSql3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDataNOSchema')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "timestamp",
						"type": "timestamp"
					},
					{
						"name": "User Security ID",
						"type": "uniqueidentifier"
					},
					{
						"name": "Role ID",
						"type": "nvarchar"
					},
					{
						"name": "Company Name",
						"type": "nvarchar"
					},
					{
						"name": "Scope",
						"type": "int",
						"precision": 10
					},
					{
						"name": "App ID",
						"type": "uniqueidentifier"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Access Control"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Cloud_Rev')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_Cloud_Connect_Rev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": "control access"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_Cloud_Connect_Rev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_ONCloud')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Role ID",
						"type": "nvarchar"
					},
					{
						"name": "Company Name",
						"type": "nvarchar"
					},
					{
						"name": "Scope",
						"type": "int",
						"precision": 10
					},
					{
						"name": "App ID",
						"type": "uniqueidentifier"
					},
					{
						"name": "timestamp",
						"type": "timestamp"
					},
					{
						"name": "User Security ID",
						"type": "uniqueidentifier"
					}
				],
				"typeProperties": {
					"schema": "",
					"table": "control access"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_OnPrem')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_OnPrem",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": "Access Control"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_OnPrem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesXML')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_POC_RD",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SalesData_005108_00935_23062023-111138_1.xml",
						"fileSystem": "xml"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_POC_RD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerOnPrem')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerOnPrem",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": {
						"value": "access control",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServerOnPrem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "timestamp",
						"type": "timestamp"
					},
					{
						"name": "User Security ID",
						"type": "uniqueidentifier"
					},
					{
						"name": "Role ID",
						"type": "nvarchar"
					},
					{
						"name": "Company Name",
						"type": "nvarchar"
					},
					{
						"name": "Scope",
						"type": "int",
						"precision": 10
					},
					{
						"name": "App ID",
						"type": "uniqueidentifier"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Access Control"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable11')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "timestamp",
						"type": "timestamp"
					},
					{
						"name": "User Security ID",
						"type": "uniqueidentifier"
					},
					{
						"name": "Role ID",
						"type": "nvarchar"
					},
					{
						"name": "Company Name",
						"type": "nvarchar"
					},
					{
						"name": "Scope",
						"type": "int",
						"precision": 10
					},
					{
						"name": "App ID",
						"type": "uniqueidentifier"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Access Control"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/XMLTOCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_POC_RD",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "csv",
						"fileSystem": "xml"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_POC_RD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_POC_RD')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "For POC and R&D purpose",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLS_POC_RD_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLS_POC_RD_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SHIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFunction1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('AzureFunction1_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('AzureFunction1_functionKey')]"
					},
					"authentication": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVaultBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "SQL_OnCloud_Connection_Key_Vault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('AzureKeyVaultBlobStorage_properties_typeProperties_connectionString_secretName')]",
						"secretVersion": "d45fdfd2eeb94e7fb5df7e3c47ad99c2"
					}
				},
				"connectVia": {
					"referenceName": "SHIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR')]",
				"[concat(variables('factoryId'), '/linkedServices/SQL_OnCloud_Connection_Key_Vault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzurePostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('AzurePostgreSql1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSql2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzurePostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('AzurePostgreSql2_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SHIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSql3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzurePostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('AzurePostgreSql3_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SHIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSql3_SHIR')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzurePostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('AzurePostgreSql3_SHIR_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SHIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SHIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase2_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SHIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/KeyVaultSQLParijat')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "SQL_OnCloud_Connection_Key_Vault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('KeyVaultSQLParijat_properties_typeProperties_connectionString_secretName')]",
						"secretVersion": "649251a21a9443b19e604123734fa202"
					}
				},
				"connectVia": {
					"referenceName": "SHIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR')]",
				"[concat(variables('factoryId'), '/linkedServices/SQL_OnCloud_Connection_Key_Vault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PostgreSql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "PostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('PostgreSql1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "IRSH-Demo",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IRSH-Demo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Cloud_Connect_Rev')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SQL_Cloud_Connect_Rev_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SHIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_OnCloud_Connection_Key_Vault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('SQL_OnCloud_Connection_Key_Vault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_OnPrem')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SQL_OnPrem_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SHIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerOnPrem')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServerOnPrem_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Custom events Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Storage_Cloud_Test",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "CustomEventsTrigger",
				"typeProperties": {
					"subjectEndsWith": "",
					"subjectBeginsWith": "",
					"scope": "[parameters('Custom events Trigger_properties_typeProperties_scope')]",
					"events": [
						"Company Name",
						"abcd.csv"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Storage_Cloud_Test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Schedule_Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 3,
						"startTime": "2023-07-25T13:34:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Storage_Event_Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Storage_Cloud_Test",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/parijatlivedb/blobs/abcd.csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('Storage_Event_Trigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Storage_Cloud_Test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tumbling window_01')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "OnCloud_Blob",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 5,
					"startTime": "2023-07-26T11:02:00Z",
					"endTime": "2023-07-27T10:58:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/OnCloud_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tumbling window_02')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "SQL_ONPrem_BLOB_Email",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 5,
					"startTime": "2023-07-26T11:33:00Z",
					"endTime": "2023-07-26T11:56:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"offset": "0.00:00:00",
							"referenceTrigger": {
								"referenceName": "Tumbling window_01",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SQL_ONPrem_BLOB_Email')]",
				"[concat(variables('factoryId'), '/triggers/Tumbling window_01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tumbling window_Testing_01')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "SQlCloud_OnPrem_SQL",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 5,
					"startTime": "2023-07-26T12:02:00Z",
					"endTime": "2023-07-27T20:55:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SQlCloud_OnPrem_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tumbling window_Testing_02')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "SQL_OnPrem_SQLCloud",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 5,
					"startTime": "2023-07-26T12:05:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"offset": "-0.00:03:00",
							"referenceTrigger": {
								"referenceName": "Tumbling window_Testing_01",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SQL_OnPrem_SQLCloud')]",
				"[concat(variables('factoryId'), '/triggers/Tumbling window_Testing_01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IRSH-Demo')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SHIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Postgres')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SQLDataNOSchema",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzurePostgreSqlTable1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          timestamp as binary,",
						"          {User Security ID} as string,",
						"          {Role ID} as string,",
						"          {Company Name} as string,",
						"          Scope as integer,",
						"          {App ID} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 derive(timestamp = toTimestamp(byName('timestamp'))) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQLDataNOSchema')]",
				"[concat(variables('factoryId'), '/datasets/AzurePostgreSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Postgres_copy1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SQLDataNOSchema",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzurePostgreSqlTable1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          timestamp as binary,",
						"          {User Security ID} as string,",
						"          {Role ID} as string,",
						"          {Company Name} as string,",
						"          Scope as integer,",
						"          {App ID} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQLDataNOSchema')]",
				"[concat(variables('factoryId'), '/datasets/AzurePostgreSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesXML')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SalesXML",
								"type": "DatasetReference"
							},
							"name": "SalesRead"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "flatten1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          SalesData as ({@BatchID} as integer, POSBasket as ({@FranchisePartnerId} as short, BasketType as string, Header as (BasketCountryID as string, BasketCurrencyID as string, BasketLanguageID as string, DateTimeCreated as string, OriginatedBy as (DeviceID as string, RegisterID as short, StoreID as short, TransactionNumber as short)), ID as string, ProductSale as (ClassNo as short, Description as string, LineNumber as short, LineVoided as boolean, NetValue as double, ProductID as integer, Quantity as double, SellingCode as string, TaxAmount as double, UnitPrice as double)[])[])",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false,",
						"     validationMode: 'none',",
						"     namespaces: true) ~> SalesRead",
						"SalesRead foldDown(unrollMultiple(SalesData.POSBasket,SalesData.POSBasket.ProductSale),",
						"     mapColumn(",
						"          {@BatchID} = SalesData.{@BatchID},",
						"          {@FranchisePartnerId} = SalesData.POSBasket.{@FranchisePartnerId},",
						"          BasketType = SalesData.POSBasket.BasketType,",
						"          ID = SalesData.POSBasket.ID,",
						"          ClassNo = SalesData.POSBasket.ProductSale.ClassNo,",
						"          Description = SalesData.POSBasket.ProductSale.Description,",
						"          LineNumber = SalesData.POSBasket.ProductSale.LineNumber,",
						"          LineVoided = SalesData.POSBasket.ProductSale.LineVoided,",
						"          NetValue = SalesData.POSBasket.ProductSale.NetValue,",
						"          ProductID = SalesData.POSBasket.ProductSale.ProductID,",
						"          Quantity = SalesData.POSBasket.ProductSale.Quantity,",
						"          SellingCode = SalesData.POSBasket.ProductSale.SellingCode,",
						"          TaxAmount = SalesData.POSBasket.ProductSale.TaxAmount,",
						"          UnitPrice = SalesData.POSBasket.ProductSale.UnitPrice",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten1",
						"flatten1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesXML')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/XMtoCSV')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "POC_XML",
								"type": "DatasetReference"
							},
							"name": "XMLADLS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "XMLTOCSV",
								"type": "DatasetReference"
							},
							"name": "CSVADLSXML",
							"description": "XML data to csv"
						}
					],
					"transformations": [
						{
							"name": "flatten1"
						}
					],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     fileList: true,",
						"     validationMode: 'xsd',",
						"     namespaces: true) ~> XMLADLS",
						"XMLADLS foldDown(unroll(),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten1",
						"flatten1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> CSVADLSXML"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/POC_XML')]",
				"[concat(variables('factoryId'), '/datasets/XMLTOCSV')]"
			]
		}
	]
}